{"version":3,"sources":["Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","index.js"],"names":["Todoinput","handleInput","e","console","log","keyCode","props","add","bind","ref","onKeyUp","this","Component","Todoing","handleDel","del","handleCheck","check","todo","map","value","key","checked","type","onChange","title","onClick","Todolist","addItem","target","tempList","state","push","setState","localStorage","setItem","JSON","stringify","splice","todolist","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"uNAIqBA,E,YAEjB,aAAc,IAAD,8BACT,+CAMJC,YAAY,SAACC,GAETC,QAAQC,IAAIF,EAAEG,SACd,EAAKC,MAAMC,IAAIL,IARf,EAAKD,YAAc,EAAKA,YAAYO,KAAjB,gBAFV,E,sEAeT,OACI,6BACG,2BAAOC,IAAI,QAAQC,QAASC,KAAKV,mB,GAnBTW,aCAlBC,E,2MACjBC,UAAU,SAACZ,GAEPC,QAAQC,IAAIF,EAAEG,SACd,EAAKC,MAAMS,IAAIb,I,EAGnBc,YAAY,SAACd,GACT,EAAKI,MAAMW,MAAMf,I,wEAIZ,IAAD,OACCgB,EAAQP,KAAKL,MAAbY,KACL,OACI,6BACG,wDACC,4BAEQA,EAAKC,KAAI,SAACC,EAAOC,GACb,IAAKD,EAAME,QACP,OACI,4BACI,2BAAOC,KAAK,WAAWD,QAASF,EAAME,QAASE,SAAU,EAAKR,YAAYR,KAAK,EAAMa,KACpFD,EAAMK,MACP,4BAAQC,QAAS,EAAKZ,UAAUN,KAAK,EAAMa,IAA3C,qBAQxB,wDACA,4BAEQH,EAAKC,KAAI,SAACC,EAAOC,GACb,GAAID,EAAME,QACN,OACI,4BACI,2BAAOC,KAAK,WAAWD,QAASF,EAAME,QAASE,SAAU,EAAKR,YAAYR,KAAK,EAAMa,KACpFD,EAAMK,MAFX,MAGO,4BAAQC,QAAS,EAAKZ,UAAUN,KAAK,EAAMa,IAA3C,0B,GA1CNT,aCAhBe,E,YACjB,WAAYrB,GAAQ,IAAD,8BACf,4CAAMA,KAOVsB,QAAU,SAAC1B,GAGP,GAAkB,KAAdA,EAAEG,QAAgB,CAElB,IAAIoB,EAAQvB,EAAE2B,OAAOT,MACjBU,EAAW,EAAKC,MAAMb,KAC1BY,EAASE,KAAK,CACVP,MAAOA,EACPH,SAAS,IAGb,EAAKW,SAAS,CACVf,KAAMY,IAEV3B,QAAQC,IAAI,EAAK2B,MAAMb,MACvBgB,aAAaC,QAAQ,WAAWC,KAAKC,UAAUP,IAE/C5B,EAAE2B,OAAOT,MAAQ,KA1BN,EA8BnBH,MAAM,SAACI,GAGH,IAAIS,EAAS,EAAKC,MAAMb,KAExBY,EAAST,GAAKC,SAASQ,EAAST,GAAKC,QAGrC,EAAKW,SAAS,CAEVf,KAAKY,IAET3B,QAAQC,IAAI0B,GAGZI,aAAaC,QAAQ,WAAWC,KAAKC,UAAUP,KA7ChC,EAgDnBf,IAAI,SAACM,GAED,IAAIS,EAAS,EAAKC,MAAMb,KAGxBY,EAASQ,OAAOjB,EAAI,GAGnB,EAAKY,SAAS,CAEXf,KAAKY,IAGTI,aAAaC,QAAQ,WAAWC,KAAKC,UAAUP,KA3D/C,EAAKC,MAAQ,CACTb,KAAK,IAHM,E,iFAsEf,IAAIqB,EAASH,KAAKI,MAAMN,aAAaO,QAAQ,aAE1CF,GAEC5B,KAAKsB,SAAS,CAEVf,KAAKqB,M,+BAMb,OACI,6BACI,0CACA,kBAAC,EAAD,CAAWhC,IAAKI,KAAKiB,UACrB,kBAAC,EAAD,CAASb,IAAKJ,KAAKI,IAAKG,KAAMP,KAAKoB,MAAMb,KAAMD,MAAON,KAAKM,a,GAvFrCL,aCCtC8B,IAASC,OACR,kBAAC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.6cb0f6ce.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\n//受控组件：value值被react控制的表单元素\r\n//可以实时获取表单元素的值\r\n\r\nexport default class Todoinput extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.handleInput = this.handleInput.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleInput=(e)=>{\r\n        //绑定this，时间处理函数写成箭头函数，或者用bind\r\n        console.log(e.keyCode)\r\n        this.props.add(e);\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>    \r\n               <input ref=\"title\" onKeyUp={this.handleInput}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n ","import React,{Component} from 'react'\r\n//受控组件：value值被react控制的表单元素\r\n//可以实时获取表单元素的值\r\n\r\nexport default class Todoing extends Component{\r\n    handleDel=(e)=>{\r\n        //绑定this，时间处理函数写成箭头函数，或者用bind\r\n        console.log(e.keyCode);\r\n        this.props.del(e);\r\n        \r\n    }\r\n    handleCheck=(e)=>{\r\n        this.props.check(e);\r\n    }\r\n    \r\n\r\n    render(){\r\n        var {todo} = this.props;\r\n        return(\r\n            <div>    \r\n               <h2>正在进行</h2>\r\n                <ul>\r\n                    {   // eslint-disable-next-line\r\n                        todo.map((value, key) => {\r\n                            if (!value.checked) {\r\n                                return (\r\n                                    <li>\r\n                                        <input type=\"checkbox\" checked={value.checked} onChange={this.handleCheck.bind(this, key)}/>\r\n                                        {value.title}\r\n                                        <button onClick={this.handleDel.bind(this, key)}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul>\r\n                    {   // eslint-disable-next-line\r\n                        todo.map((value, key) => {\r\n                            if (value.checked) {\r\n                                return (\r\n                                    <li>\r\n                                        <input type=\"checkbox\" checked={value.checked} onChange={this.handleCheck.bind(this, key)}/>\r\n                                        {value.title}\r\n                                        -- <button onClick={this.handleDel.bind(this, key)}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todoinput from './Todoinput'\r\nimport Todoing from './Todoing'\r\n\r\nexport default class Todolist extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            todo:[]\r\n            \r\n        };\r\n    }   \r\n\r\n    addItem = (e) => {\r\n        //按下回车的时候在增加\r\n\r\n        if (e.keyCode === 13) {\r\n            // alert(title);\r\n            let title = e.target.value;\r\n            let tempList = this.state.todo;\r\n            tempList.push({\r\n                title: title,\r\n                checked: false\r\n            })\r\n            //改变后的值赋值给list\r\n            this.setState({\r\n                todo: tempList\r\n            })\r\n            console.log(this.state.todo);\r\n            localStorage.setItem('todolist',JSON.stringify(tempList));\r\n            //表单置为空\r\n            e.target.value = '';\r\n        }\r\n    }\r\n\r\n    check=(key)=>{\r\n\r\n        // alert('111');\r\n        let tempList=this.state.todo;\r\n\r\n        tempList[key].checked=!tempList[key].checked;\r\n\r\n\r\n        this.setState({\r\n\r\n            todo:tempList\r\n        })\r\n        console.log(tempList)\r\n\r\n        //执行缓存数据\r\n        localStorage.setItem('todolist',JSON.stringify(tempList));\r\n\r\n    }\r\n    del=(key)=>{\r\n\r\n        let tempList=this.state.todo;\r\n\r\n\r\n        tempList.splice(key,1);\r\n\r\n\r\n         this.setState({\r\n\r\n            todo:tempList\r\n        })\r\n        //执行缓存数据\r\n        localStorage.setItem('todolist',JSON.stringify(tempList));\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        //获取缓存的数据\r\n\r\n        var todolist=JSON.parse(localStorage.getItem('todolist'));   /*字符串*/\r\n\r\n        if(todolist){\r\n\r\n            this.setState({\r\n\r\n                todo:todolist\r\n            })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>   \r\n                <div>TodoList:</div>\r\n                <Todoinput add={this.addItem}/>  \r\n                <Todoing del={this.del} todo={this.state.todo} check={this.check}/>    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todolist from './Todolist/Todolist.js';\n\nReactDOM.render(\n\t<Todolist />,\n\t document.getElementById('root')\n\t );\n\n\n"],"sourceRoot":""}